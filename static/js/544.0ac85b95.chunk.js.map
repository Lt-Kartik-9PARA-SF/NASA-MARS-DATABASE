{"version":3,"file":"static/js/544.0ac85b95.chunk.js","mappings":"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","sources":["Components/Data.js","Components/Display.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport default function Data(props) {\r\n  return (\r\n    <div className='dataComp'>\r\n        <img src={props.imageUrl} alt=\"photo\"/>\r\n        <br/>\r\n        <div>\r\n        <h3>Earth Date : {props.earthDate}</h3>\r\n        <h3>Rover : <strong>{props.roverName}</strong></h3>\r\n        <p>Photo ID: {props.id}</p>\r\n        <p>Launch Date : {props.launchDate}</p>\r\n        <p>Landing Date : {props.landingDate}</p>\r\n        <p>Status : <span className={props.status} >{props.status}</span></p>\r\n        <p>Sol : {props.sol}</p>\r\n        </div>\r\n       \r\n\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Lazy } from 'react-lazy'\r\nimport Data from './Data';\r\nexport default function Display() {\r\n    const [data, setData] = useState([]);\r\n    const [rover, setRover] = useState('curiosity');\r\n    const [sol, setSol] = useState(100);\r\n    const [day, setDay] = useState(100);\r\n    const [page, setPage] = useState(1);\r\n\r\n    let key = \"6k7BTdzhwr94WNvCnX0fI0cLRfeCIj8V1zDala30\"\r\n\r\n    const pageFunc = (event) => {\r\n        \r\n            event.target.previousElementSibling.setAttribute('class',\"\");\r\n            event.target.setAttribute(\"class\",'activeBtn');\r\n       \r\n        setPage(event.target.value);\r\n        \r\n    }\r\nconst srover = (event)=>{\r\n  //  event.target.setAttribute('class','ractive');\r\n  //  event.target.nextElementSibling.setAttribute('class','');\r\n  //  event.target.previousElementSibling.setAttribute('class','');\r\n   \r\n   console.log(event.target.value);\r\n    \r\n setRover(event.target.value);\r\n}\r\n    const handleChange = (event) => {\r\n        let input = event.target.value;\r\n\r\n        setSol(input);\r\n\r\n    }\r\n\r\n    const submit = () => {\r\n\r\n        setDay(sol);\r\n        console.log(day);\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        let url = `https://api.nasa.gov/mars-photos/api/v1/rovers/${rover}/photos?sol=${day}&page=${page}&&api_key=${key}`\r\n        let response = await fetch(url);\r\n        let info = await response.json();\r\n        setData(info.photos);\r\n\r\n    }\r\n\r\n    console.log(data);\r\n\r\n     useEffect(()=>{fetchData()},[rover,day,page]);\r\n\r\n    return (\r\n\r\n        <div className=\"mainDiv\">\r\n            <div className='selectionPanel'>\r\n                <div className='rovers'>\r\n                    <h2>Select a Rover</h2>\r\n\r\n                    <div className='buttons'>\r\n                        <button value='curiosity' onClick={srover}>Curiosity</button>\r\n                        <button value='opportunity' onClick={srover}>Opportunity</button>\r\n                        <button value='spirit' onClick={srover}>Spirit</button>\r\n                    </div>\r\n\r\n                    <p className='desktopMsg'>For a better Experience use a Device with a Larger Resolution</p>\r\n                    <p>Total Results: {data.length} </p>\r\n                    <p>Sol : {day}</p>\r\n\r\n                </div>\r\n\r\n                <div className='sol'>\r\n\r\n                    <h2 className=\"solItem\">Enter Solar Day Value</h2>\r\n                    <input type=\"number\" value={sol} onChange={handleChange} className=\"solItem\" />\r\n                    <button onClick={submit} className=\"submitBtn solItem\">Submit</button>\r\n                    <p className=\"solItem\">\r\n                        Sol (borrowed from the Latin word for sun) is a solar day on Mars; that is, a Mars-day.\r\n                        A sol is slightly longer than an Earth day. It is approximately 24 hours, 39 minutes, 35 seconds long. A Martian year is approximately 668 sols, equivalent to approximately 687 Earth days[1] or 1.88 Earth years.\r\n                    </p>\r\n                </div>\r\n\r\n            </div>\r\n            {\r\n                data.length == 0 ? <div><h1>Loading...</h1></div> : <div className='displayBox'>\r\n\r\n                    <div className='displayBoxItems'>\r\n\r\n\r\n                        {\r\n                            data.length == 0 ? <h1>Loading</h1> :\r\n                            data.map((element) => {\r\n                                return (\r\n                                    <Data imageUrl={element.img_src} earthDate={element.earth_date} roverName={element.rover.name} id={element.id} launchDate={element.rover.launch_date} landingDate={element.rover.landing_date} status={element.rover.status} sol={element.sol} />\r\n                                );\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <div className='pages'>\r\n                        <span>Page</span>\r\n                        <button className='activeBtn' value={1} onClick={pageFunc}>1</button>\r\n                        <button  value={2} onClick={pageFunc}>2</button>\r\n                        <button  value={3} onClick={pageFunc}>3</button>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n"],"names":["Data","props","className","src","imageUrl","alt","earthDate","roverName","id","launchDate","landingDate","status","sol","Display","useState","data","setData","rover","setRover","setSol","day","setDay","page","setPage","pageFunc","event","target","previousElementSibling","setAttribute","value","srover","console","log","fetchData","url","fetch","response","json","info","photos","useEffect","onClick","length","type","onChange","input","map","element","img_src","earth_date","name","launch_date","landing_date"],"sourceRoot":""}